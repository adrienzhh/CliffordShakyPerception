<?xml version="1.0"?>
<robot name="test_bot_2" xmlns:xacro="http://ros.org/wiki/xacro">
    
  <xacro:property name="base_width" value="0.055" />
  <xacro:property name="base_height" value="0.01" />
  <xacro:property name="wheel_dia" value="0.025" />
  <xacro:property name="wheel_thick" value="0.02"/>
  <xacro:property name="slider_base_height" value="0.1"/>
  <xacro:property name="slider_base_width" value="0.02"/>
  <xacro:property name="slider_height" value="0.15"/>
  <xacro:property name="slider_width" value="0.01"/>
  <xacro:property name="camera_width" value="0.01"/>
  <xacro:property name="slide_ulim" value="0.025"/>
  <xacro:property name="slide_llim" value="-0.025"/>
  <xacro:property name="cam_llim" value="-0.436332"/>
  <xacro:property name="cam_ulim" value="0.436332"/>

  <material name="white">
      <color rgba="1 1 1 1"/>
  </material>

  <xacro:macro name="default_inertial" params="mass inertia">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="${inertia}" ixy="0.0" ixz="0.0" iyy="${inertia}" iyz="0.0" izz="${inertia}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="wheel" params="prefix reflect1 reflect2 reflect3">
      <link name="${prefix}_wheel">
          <visual>
              <geometry>
                  <cylinder length="${wheel_thick}" radius="${wheel_dia}"/>
              </geometry>
              <origin xyz="${reflect3*wheel_thick/2} 0 0" rpy="0 1.57075 0"/>
              <material name="white"/>
          </visual>
          <collision>
              <geometry>
                  <cylinder length="${wheel_thick}" radius="${wheel_dia}"/>
              </geometry>
              <origin xyz="${reflect3*wheel_thick/2} 0 0" rpy="0 1.57075 0"/>
          </collision>
          <inertial>
            <mass value="1" />
            <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy=".0001" iyz="0.0" izz=".00001" />
          </inertial>
      </link>
  
      <joint name="base_to_${prefix}_wheel" type="continuous">
          <parent link="base_frame"/>
          <child link="${prefix}_wheel"/>
          <origin xyz="${reflect1*base_width/2} ${reflect2*base_width/2} 0" rpy="0.0 0.0 1.57079632679"/>
      </joint>
  </xacro:macro>

  <link name="base_frame">
      <visual>
          <geometry>
              <box size="${base_width} ${base_width} ${base_height}"/>
          </geometry>
          <material name="white"/>
      </visual>
      <collision>
          <geometry>
              <box size="${base_width} ${base_width} ${base_height}"/>
          </geometry>
      </collision>
      <!-- <inertial>
        <mass value="50" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001" />
      </inertial> -->
  </link>

  <xacro:wheel prefix="0" reflect1="1" reflect2="1" reflect3="1"/>
  <xacro:wheel prefix="1" reflect1="-1" reflect2="1" reflect3="1"/>
  <xacro:wheel prefix="2" reflect1="1" reflect2="-1" reflect3="-1"/>
  <xacro:wheel prefix="3" reflect1="-1" reflect2="-1" reflect3="-1"/>

  <link name = "slider_base">
      <visual>
          <geometry>
              <box size="${slider_base_width} ${slider_base_width} ${slider_base_height}"/> 
          </geometry>
          <origin xyz="0.0 0.0 ${slider_base_height/2}"/>
          <material name="white"/>
      </visual>
      <collision>
          <geometry>
              <box size="${slider_base_width} ${slider_base_width} ${slider_base_height}"/> 
          </geometry>
          <origin xyz="0.0 0.0 ${slider_base_height/2}"/>
      </collision>
      <inertial>
        <mass value="1" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001" />
      </inertial>
  </link>

  <joint name="base_slider_base" type="fixed">
      <parent link="base_frame"/>
      <child link="slider_base"/>
      <origin xyz="0.0 0.0 ${base_height/2}"/>
  </joint>


  <link name = "camera_mount">
        <visual>
            <geometry>
                <box size="${camera_width} ${camera_width} ${camera_width}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <box size="${camera_width} ${camera_width} ${camera_width}"/> 
            </geometry>
        </collision>
    <inertial>
        <mass value="0.00001" />
        <inertia ixx="0.0000000001" ixy="0.0" ixz="0.000000000001000" iyy="0.0000" iyz="0.0" izz="0.0000000001" />
    </inertial>
    </link>

    <joint name="camera_slider" type="revolute">
        <parent link="slider_base"/>
        <child link="camera_mount"/>
        <origin xyz="0.0 0.0 ${1.5*slider_base_height}" rpy="0.0 0.0 0.0"/> <!-- pi/2 -->
        <limit effort="15.0" lower="${cam_llim}" upper="${cam_ulim}" velocity="100"/>
        <axis xyz="0 -1 0"/>
    </joint>


    <transmission name="head_rotation">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="$camera_motor">
          <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="camera_slider">
          <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
      </transmission>
    
      <xacro:macro name="wheel_trans" params="prefix">
        <transmission name="${prefix}_wheel_trans">
          <type>transmission_interface/SimpleTransmission</type>
          <actuator name="${prefix}_wheel_motor">
            <mechanicalReduction>1</mechanicalReduction>
          </actuator>
          <joint name="base_to_${prefix}_wheel">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
          </joint>
        </transmission>
        <gazebo reference="${prefix}_wheel">
          <mu1 value="300.0"/>
          <mu2 value="100.0"/>
          <kp value="1000000.0" />
          <kd value="1000.0" />
          <material>Gazebo/Grey</material>
        </gazebo>
      </xacro:macro>
    
      <xacro:wheel_trans prefix="0"/>
      <xacro:wheel_trans prefix="1"/>
      <xacro:wheel_trans prefix="2"/>
      <xacro:wheel_trans prefix="3"/>
    
      <!-- <Gazebo plugin for ROS Control> -->
      <gazebo>
          <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
              <robotNamespace>/</robotNamespace>
          </plugin>
      </gazebo>

      <link name = "imu_link"/>

      <joint name="imu_mount" type="fixed">
        <parent link="camera_mount"/>
        <child link="imu_link"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      </joint>

      <gazebo>
        <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
          <alwaysOn>true</alwaysOn>
          <bodyName>imu_link</bodyName>
          <topicName>imu</topicName>
          <serviceName>imu_service</serviceName>
          <gaussianNoise>0.0</gaussianNoise>
          <updateRate>250.0</updateRate>
        </plugin>
      </gazebo>
</robot>
